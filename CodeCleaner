# Code Cleaner v1
# Author: Paolo Miguel M. de los Santos
# sample usage: sed -r -i -f CodeCleaner *.cpp
# NOTES:
# 1. Lookbehind and lookahead doesn't work with sed and grep.
#		Alternate solution is to create a new regex, use ssed (but only for windows), or use perl/python.
# 2. Sed is line-based therefore it is hard for it to grasp newlines. Sed works on a "stream" of input, but it comprehends it in newline delimited chunks.
#		Alternate solution is to use alternate tools such as cat, tr, awk, grep, perl or python.

# BASIC

# convert tabs to spaces
s/\t/    /g

# convert windows line endings to UNIX line endings
s/\r\n/\n/g

# trim trailing tabs and spaces
s/[ \t]+$//g

# remove spaces before open parenthesis
s/[[:blank:]]+\(/\(/g

# remove spaces after open parenthesis
s/\([[:blank:]]+/\(/g

# remove spaces before close parenthesis
s/[[:blank:]]+\)/\)/g

# remove new line and/or trailing spaces between a character and close parenthesis
# not done
s/\n[[:blank:]]*\)/\)/g

# remove excess new line
s/\n\n\n/\n\n/g
# '/^$/N;/^\n$/D'

# remove excess new line between close braces
# not done
s/\}\n+\}/\}\n\}/g

# insert space between commas and characters
s/,(\S)/, \1/g

# insert spaces between equals sign and characters
s/(\w)=(\w)/\1 = \2/g

# convert postfix ++/-- to prefix ++/--
s/(\w+)([\+\-]{2})/\2\1/g

# ADVANCED

# insert space before open parenthesis if if or for preceeds the parenthesis
s/((?<=for)|(?<=if))\(/ \(/g
# s/(for|if|while)\(/\1 \(/g

# append std:: to standard functions and types
s/(?<![\w:])(string|map|memset|list|vector|auto_ptr)/std::\1/g
# s/^([<, \(\[]*)(string|map|memset|list|vector|auto_ptr)/\1std::\2/g

# format headers
# WARNING: might cause compilation errors
s/#include[[:space:]]*["<](.+)[">]/#include <\1>/g

# convert boost::lexical_cast<std::string> to std::to_string
s/boost::lexical_cast<(string|std::string)>/std::to_string/g

# convert boost::lexical_cast<int> to std::stoi
s/boost::lexical_cast<int>/std::stoi/g